class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        int[] color = new int[graph.length];
        for(int i = 0;i<graph.length;i++)
            color[i] = -1;
        int c = 0;
        for(int i = 0;i<graph.length;i++){
            if(color[i]==-1){
                dfs(color, graph, c, i);
                c++;
            }
        }
        int colorcount[] = new int[c];
        for(int i=0;i<color.length;i++){
            colorcount[color[i]]++;
        }
        
        int[] set = new int[c];
        for(int i = 0;i<initial.length;i++)
            set[color[initial[i]]]++;
        
        int ans = -1;
        for(int i = 0;i<initial.length;i++){
            int clr = color[initial[i]];
            if(set[clr]==1){
                if(ans==-1)
                    ans = initial[i];
                else if(colorcount[clr]>colorcount[color[ans]])
                    ans = initial[i];
                else if(colorcount[clr]==colorcount[color[ans]] && initial[i]<ans)
                    ans = initial[i];
            }
        }
        if(ans==-1){
            ans = Integer.MAX_VALUE;
            for(int i = 0;i<initial.length;i++)
                ans = Math.min(ans, initial[i]);
        }
        
        return ans;
    }
    public void dfs(int[] color, int[][] graph, int c, int curr){
        color[curr] = c;
        for(int j = 0;j<graph.length;j++){
            if(graph[curr][j]==1 && color[j]==-1)
                dfs(color, graph, c, j);
        }
    }
}